name: Pre-release

on:
  workflow_dispatch

concurrency:
  group: build-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  build:
    name: Build for Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Create bump and changelog
      id: cz
      uses: commitizen-tools/commitizen-action@master
      with:
        github_token: ${{ github.token }}
        changelog: false
        prerelease: "rc"

    - name: Print Version
      run: echo "Bumped to version ${{ steps.cz.outputs.version }}"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Hatch
      run: pip install --upgrade hatch

    - name: Run tests
      run: hatch run cov

    - name: Build
      run: hatch build

    - name: Publish
      run: hatch publish --user __token__ --yes
      env:
        HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}

  version_bump:
    name: "Version bump to beta version"
    runs-on: "ubuntu-latest"
    needs: build
    permissions:
      contents: write

    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: "${{ github.token }}"

      - name: Create bump and changelog
        id: cz
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ github.token }}
          changelog: false
          prerelease: "rc"

      - name: Print Version
        run: echo "Bumped to version ${{ steps.cz.outputs.version }}"



        
